["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$clojure.set","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$union",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","~:line",19,"~:column",7,"~:end-line",19,"~:end-column",12,"~:arglists",["~#list",["~$quote",["^E",[[],["~$s1"],["^G","~$s2"],["^G","^H","~$&","~$sets"]]]]],"~:doc","Return a set that is the union of the input sets","~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",2,"~:method-params",["^E",[[],["^G"],["^G","^H"]]],"^D",["^E",[[],["^G"],["^G","^H"],["^G","^H","~$&","^I"]]],"~:arglists-meta",["^E",[null,null,null,null]]]],"^5","~$clojure.set/union","^L",true,"^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^C",12,"^K",["^ ","^L",true,"^M",2,"^N",["^E",[[],["^G"],["^G","^H"]]],"^D",["^E",[[],["^G"],["^G","^H"],["^G","^H","~$&","^I"]]],"^O",["^E",[null,null,null,null]]],"^N",["^E",[[],["^G"],["^G","^H"]]],"~:protocol-impl",null,"^O",["^E",[null,null,null,null]],"^A",1,"^@",19,"^B",19,"^M",2,"~:fn-var",true,"^D",["^E",[[],["^G"],["^G","^H"],["^G","^H","~$&","^I"]]],"^J","Return a set that is the union of the input sets"],"~$map-invert",["^ ","^=",null,"^>",["^ ","^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^@",97,"^A",7,"^B",97,"^C",17,"^D",["^E",["^F",["^E",[["~$m"]]]]],"^J","Returns the map with the vals mapped to the keys."],"^5","~$clojure.set/map-invert","^L",false,"^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^C",17,"^N",["^E",[["~$m"]]],"^Q",null,"^O",["^E",[null,null]],"^A",1,"^@",97,"^B",97,"^M",1,"^R",true,"^D",["^E",["^F",["^E",[["~$m"]]]]],"^J","Returns the map with the vals mapped to the keys."],"~$join",["^ ","^=",null,"^>",["^ ","^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^@",101,"^A",7,"^B",101,"^C",11,"^D",["^E",["^F",["^E",[["~$xrel","~$yrel"],["^V","^W","~$km"]]]]],"^J","When passed 2 rels, returns the rel corresponding to the natural\n  join. When passed an additional keymap, joins on the corresponding\n  keys.","^K",["^ ","^L",false,"^M",3,"^N",["^E",[["^V","^W"],["^V","^W","^X"]]],"^D",["^E",[["^V","^W"],["^V","^W","^X"]]],"^O",["^E",[null,null]]]],"^5","~$clojure.set/join","^L",false,"^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^C",11,"^K",["^ ","^L",false,"^M",3,"^N",["^E",[["^V","^W"],["^V","^W","^X"]]],"^D",["^E",[["^V","^W"],["^V","^W","^X"]]],"^O",["^E",[null,null]]],"^N",["^E",[["^V","^W"],["^V","^W","^X"]]],"^Q",null,"^O",["^E",[null,null]],"^A",1,"^@",101,"^B",101,"^M",3,"^R",true,"^D",["^E",[["^V","^W"],["^V","^W","^X"]]],"^J","When passed 2 rels, returns the rel corresponding to the natural\n  join. When passed an additional keymap, joins on the corresponding\n  keys."],"~$select",["^ ","^=",null,"^>",["^ ","^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^@",61,"^A",7,"^B",61,"^C",13,"^D",["^E",["^F",["^E",[["~$pred","~$xset"]]]]],"^J","Returns a set of the elements for which pred is true"],"^5","~$clojure.set/select","^L",false,"^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^C",13,"^N",["^E",[["^[","^10"]]],"^Q",null,"^O",["^E",[null,null]],"^A",1,"^@",61,"^B",61,"^M",2,"^R",true,"^D",["^E",["^F",["^E",[["^[","^10"]]]]],"^J","Returns a set of the elements for which pred is true"],"~$intersection",["^ ","^=",null,"^>",["^ ","^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^@",31,"^A",7,"^B",31,"^C",19,"^D",["^E",["^F",["^E",[["^G"],["^G","^H"],["^G","^H","~$&","^I"]]]]],"^J","Return a set that is the intersection of the input sets","^K",["^ ","^L",true,"^M",2,"^N",["^E",[["^G"],["^G","^H"]]],"^D",["^E",[["^G"],["^G","^H"],["^G","^H","~$&","^I"]]],"^O",["^E",[null,null,null]]]],"^5","~$clojure.set/intersection","^L",true,"^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^C",19,"^K",["^ ","^L",true,"^M",2,"^N",["^E",[["^G"],["^G","^H"]]],"^D",["^E",[["^G"],["^G","^H"],["^G","^H","~$&","^I"]]],"^O",["^E",[null,null,null]]],"^N",["^E",[["^G"],["^G","^H"]]],"^Q",null,"^O",["^E",[null,null,null]],"^A",1,"^@",31,"^B",31,"^M",2,"^R",true,"^D",["^E",[["^G"],["^G","^H"],["^G","^H","~$&","^I"]]],"^J","Return a set that is the intersection of the input sets"],"~$superset?",["^ ","^=",null,"^>",["^ ","^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^@",137,"^A",7,"^B",137,"^C",16,"^D",["^E",["^F",["^E",[["~$set1","~$set2"]]]]],"^J","Is set1 a superset of set2?"],"^5","~$clojure.set/superset?","^L",false,"^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^C",16,"^N",["^E",[["^15","^16"]]],"^Q",null,"^O",["^E",[null,null]],"^A",1,"^@",137,"^B",137,"^M",2,"^R",true,"^D",["^E",["^F",["^E",[["^15","^16"]]]]],"^J","Is set1 a superset of set2?"],"~$index",["^ ","^=",null,"^>",["^ ","^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^@",87,"^A",7,"^B",87,"^C",12,"^D",["^E",["^F",["^E",[["^V","~$ks"]]]]],"^J","Returns a map of the distinct values of ks in the xrel mapped to a\n  set of the maps in xrel with the corresponding values of ks."],"^5","~$clojure.set/index","^L",false,"^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^C",12,"^N",["^E",[["^V","^19"]]],"^Q",null,"^O",["^E",[null,null]],"^A",1,"^@",87,"^B",87,"^M",2,"^R",true,"^D",["^E",["^F",["^E",[["^V","^19"]]]]],"^J","Returns a map of the distinct values of ks in the xrel mapped to a\n  set of the maps in xrel with the corresponding values of ks."],"~$bubble-max-key",["^ ","^=",null,"^>",["^ ","^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^@",13,"^A",8,"^B",13,"^C",22,"~:private",true,"^D",["^E",["^F",["^E",[["~$k","~$coll"]]]]]],"^1<",true,"^5","~$clojure.set/bubble-max-key","^L",false,"^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^C",22,"^N",["^E",[["~$k","^1="]]],"^Q",null,"^O",["^E",[null,null]],"^A",1,"^@",13,"^B",13,"^M",2,"^R",true,"^D",["^E",["^F",["^E",[["~$k","^1="]]]]]],"~$subset?",["^ ","^=",null,"^>",["^ ","^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^@",131,"^A",7,"^B",131,"^C",14,"^D",["^E",["^F",["^E",[["^15","^16"]]]]],"^J","Is set1 a subset of set2?"],"^5","~$clojure.set/subset?","^L",false,"^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^C",14,"^N",["^E",[["^15","^16"]]],"^Q",null,"^O",["^E",[null,null]],"^A",1,"^@",131,"^B",131,"^M",2,"^R",true,"^D",["^E",["^F",["^E",[["^15","^16"]]]]],"^J","Is set1 a subset of set2?"],"~$rename",["^ ","^=",null,"^>",["^ ","^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^@",82,"^A",7,"^B",82,"^C",13,"^D",["^E",["^F",["^E",[["^V","~$kmap"]]]]],"^J","Returns a rel of the maps in xrel with the keys in kmap renamed to the vals in kmap"],"^5","~$clojure.set/rename","^L",false,"^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^C",13,"^N",["^E",[["^V","^1B"]]],"^Q",null,"^O",["^E",[null,null]],"^A",1,"^@",82,"^B",82,"^M",2,"^R",true,"^D",["^E",["^F",["^E",[["^V","^1B"]]]]],"^J","Returns a rel of the maps in xrel with the keys in kmap renamed to the vals in kmap"],"~$rename-keys",["^ ","^=",null,"^>",["^ ","^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^@",72,"^A",7,"^B",72,"^C",18,"^D",["^E",["^F",["^E",[["~$map","^1B"]]]]],"^J","Returns the map with the keys in kmap renamed to the vals in kmap"],"^5","~$clojure.set/rename-keys","^L",false,"^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^C",18,"^N",["^E",[["^1E","^1B"]]],"^Q",null,"^O",["^E",[null,null]],"^A",1,"^@",72,"^B",72,"^M",2,"^R",true,"^D",["^E",["^F",["^E",[["^1E","^1B"]]]]],"^J","Returns the map with the keys in kmap renamed to the vals in kmap"],"~$project",["^ ","^=",null,"^>",["^ ","^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^@",67,"^A",7,"^B",67,"^C",14,"^D",["^E",["^F",["^E",[["^V","^19"]]]]],"^J","Returns a rel of the elements of xrel with only the keys in ks"],"^5","~$clojure.set/project","^L",false,"^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^C",14,"^N",["^E",[["^V","^19"]]],"^Q",null,"^O",["^E",[null,null]],"^A",1,"^@",67,"^B",67,"^M",2,"^R",true,"^D",["^E",["^F",["^E",[["^V","^19"]]]]],"^J","Returns a rel of the elements of xrel with only the keys in ks"],"~$difference",["^ ","^=",null,"^>",["^ ","^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^@",46,"^A",7,"^B",46,"^C",17,"^D",["^E",["^F",["^E",[["^G"],["^G","^H"],["^G","^H","~$&","^I"]]]]],"^J","Return a set that is the first set without elements of the remaining sets","^K",["^ ","^L",true,"^M",2,"^N",["^E",[["^G"],["^G","^H"]]],"^D",["^E",[["^G"],["^G","^H"],["^G","^H","~$&","^I"]]],"^O",["^E",[null,null,null]]]],"^5","~$clojure.set/difference","^L",true,"^?","/home/kenjigashu/.cljs/.aot_cache/1.10.339/60170E5/clojure/set.cljs","^C",17,"^K",["^ ","^L",true,"^M",2,"^N",["^E",[["^G"],["^G","^H"]]],"^D",["^E",[["^G"],["^G","^H"],["^G","^H","~$&","^I"]]],"^O",["^E",[null,null,null]]],"^N",["^E",[["^G"],["^G","^H"]]],"^Q",null,"^O",["^E",[null,null,null]],"^A",1,"^@",46,"^B",46,"^M",2,"^R",true,"^D",["^E",[["^G"],["^G","^H"],["^G","^H","~$&","^I"]]],"^J","Return a set that is the first set without elements of the remaining sets"]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^J","Set operations such as union/intersection."]